//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestConsole.TreeServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VirtualTreeDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class VirtualTreeDto : TestConsole.TreeServiceReference.TreeDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasChildrenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasChildren {
            get {
                return this.HasChildrenField;
            }
            set {
                if ((this.HasChildrenField.Equals(value) != true)) {
                    this.HasChildrenField = value;
                    this.RaisePropertyChanged("HasChildren");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.BaseTreeDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.UserDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.PersonDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.ReportTypeGroupDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.TreeDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.VirtualTreeDto))]
    public partial class BaseDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseTreeDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.UserDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.PersonDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.ReportTypeGroupDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.TreeDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.VirtualTreeDto))]
    public partial class BaseTreeDto : TestConsole.TreeServiceReference.BaseDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TypeIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDateTime {
            get {
                return this.CreateDateTimeField;
            }
            set {
                if ((this.CreateDateTimeField.Equals(value) != true)) {
                    this.CreateDateTimeField = value;
                    this.RaisePropertyChanged("CreateDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StateId {
            get {
                return this.StateIdField;
            }
            set {
                if ((this.StateIdField.Equals(value) != true)) {
                    this.StateIdField = value;
                    this.RaisePropertyChanged("StateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TypeId {
            get {
                return this.TypeIdField;
            }
            set {
                if ((this.TypeIdField.Equals(value) != true)) {
                    this.TypeIdField = value;
                    this.RaisePropertyChanged("TypeId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class UserDto : TestConsole.TreeServiceReference.BaseTreeDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserGroupIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salt {
            get {
                return this.SaltField;
            }
            set {
                if ((object.ReferenceEquals(this.SaltField, value) != true)) {
                    this.SaltField = value;
                    this.RaisePropertyChanged("Salt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserGroupId {
            get {
                return this.UserGroupIdField;
            }
            set {
                if ((this.UserGroupIdField.Equals(value) != true)) {
                    this.UserGroupIdField = value;
                    this.RaisePropertyChanged("UserGroupId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class PersonDto : TestConsole.TreeServiceReference.BaseTreeDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatronymicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patronymic {
            get {
                return this.PatronymicField;
            }
            set {
                if ((object.ReferenceEquals(this.PatronymicField, value) != true)) {
                    this.PatronymicField = value;
                    this.RaisePropertyChanged("Patronymic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportTypeGroupDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class ReportTypeGroupDto : TestConsole.TreeServiceReference.BaseTreeDto {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreeDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.VirtualTreeDto))]
    public partial class TreeDto : TestConsole.TreeServiceReference.BaseTreeDto {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TreeServiceReference.ITreeService")]
    public interface ITreeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetSystemObjects", ReplyAction="http://tempuri.org/ITreeService/GetSystemObjectsResponse")]
        string[] GetSystemObjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetSystemObjects", ReplyAction="http://tempuri.org/ITreeService/GetSystemObjectsResponse")]
        System.Threading.Tasks.Task<string[]> GetSystemObjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetTrees", ReplyAction="http://tempuri.org/ITreeService/GetTreesResponse")]
        TestConsole.TreeServiceReference.VirtualTreeDto[] GetTrees(System.Nullable<System.Guid> parent, System.Guid treeParentType, bool includeParent, bool includeDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetTrees", ReplyAction="http://tempuri.org/ITreeService/GetTreesResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.VirtualTreeDto[]> GetTreesAsync(System.Nullable<System.Guid> parent, System.Guid treeParentType, bool includeParent, bool includeDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetTreeParents", ReplyAction="http://tempuri.org/ITreeService/GetTreeParentsResponse")]
        TestConsole.TreeServiceReference.VirtualTreeDto[] GetTreeParents(System.Nullable<System.Guid> parent, System.Guid child, System.Guid treeParentType, bool includeChild, bool includeDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetTreeParents", ReplyAction="http://tempuri.org/ITreeService/GetTreeParentsResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.VirtualTreeDto[]> GetTreeParentsAsync(System.Nullable<System.Guid> parent, System.Guid child, System.Guid treeParentType, bool includeChild, bool includeDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/SearchTreesByText", ReplyAction="http://tempuri.org/ITreeService/SearchTreesByTextResponse")]
        TestConsole.TreeServiceReference.VirtualTreeDto[] SearchTreesByText(string searchText, System.Guid treeParentType, System.Guid[] typeIds, System.Guid[] ignoreTypeIds, System.Nullable<System.Guid> parent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/SearchTreesByText", ReplyAction="http://tempuri.org/ITreeService/SearchTreesByTextResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.VirtualTreeDto[]> SearchTreesByTextAsync(string searchText, System.Guid treeParentType, System.Guid[] typeIds, System.Guid[] ignoreTypeIds, System.Nullable<System.Guid> parent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateTree", ReplyAction="http://tempuri.org/ITreeService/CreateTreeResponse")]
        TestConsole.TreeServiceReference.TreeDto CreateTree(TestConsole.TreeServiceReference.TreeDto treeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateTree", ReplyAction="http://tempuri.org/ITreeService/CreateTreeResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.TreeDto> CreateTreeAsync(TestConsole.TreeServiceReference.TreeDto treeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetTree", ReplyAction="http://tempuri.org/ITreeService/GetTreeResponse")]
        TestConsole.TreeServiceReference.TreeDto GetTree(System.Guid treeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetTree", ReplyAction="http://tempuri.org/ITreeService/GetTreeResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.TreeDto> GetTreeAsync(System.Guid treeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateTree", ReplyAction="http://tempuri.org/ITreeService/UpdateTreeResponse")]
        void UpdateTree(TestConsole.TreeServiceReference.TreeDto treeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateTree", ReplyAction="http://tempuri.org/ITreeService/UpdateTreeResponse")]
        System.Threading.Tasks.Task UpdateTreeAsync(TestConsole.TreeServiceReference.TreeDto treeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/DeleteTree", ReplyAction="http://tempuri.org/ITreeService/DeleteTreeResponse")]
        void DeleteTree(TestConsole.TreeServiceReference.TreeDto treeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/DeleteTree", ReplyAction="http://tempuri.org/ITreeService/DeleteTreeResponse")]
        System.Threading.Tasks.Task DeleteTreeAsync(TestConsole.TreeServiceReference.TreeDto treeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateUser", ReplyAction="http://tempuri.org/ITreeService/CreateUserResponse")]
        TestConsole.TreeServiceReference.UserDto CreateUser(TestConsole.TreeServiceReference.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateUser", ReplyAction="http://tempuri.org/ITreeService/CreateUserResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.UserDto> CreateUserAsync(TestConsole.TreeServiceReference.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetUser", ReplyAction="http://tempuri.org/ITreeService/GetUserResponse")]
        TestConsole.TreeServiceReference.UserDto GetUser(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetUser", ReplyAction="http://tempuri.org/ITreeService/GetUserResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.UserDto> GetUserAsync(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateUser", ReplyAction="http://tempuri.org/ITreeService/UpdateUserResponse")]
        void UpdateUser(TestConsole.TreeServiceReference.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateUser", ReplyAction="http://tempuri.org/ITreeService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(TestConsole.TreeServiceReference.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/FindUserByLogin", ReplyAction="http://tempuri.org/ITreeService/FindUserByLoginResponse")]
        TestConsole.TreeServiceReference.UserDto FindUserByLogin(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/FindUserByLogin", ReplyAction="http://tempuri.org/ITreeService/FindUserByLoginResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.UserDto> FindUserByLoginAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/AuthenticateUser", ReplyAction="http://tempuri.org/ITreeService/AuthenticateUserResponse")]
        TestConsole.TreeServiceReference.UserDto AuthenticateUser(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/AuthenticateUser", ReplyAction="http://tempuri.org/ITreeService/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.UserDto> AuthenticateUserAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreatePerson", ReplyAction="http://tempuri.org/ITreeService/CreatePersonResponse")]
        TestConsole.TreeServiceReference.PersonDto CreatePerson(TestConsole.TreeServiceReference.PersonDto personDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreatePerson", ReplyAction="http://tempuri.org/ITreeService/CreatePersonResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.PersonDto> CreatePersonAsync(TestConsole.TreeServiceReference.PersonDto personDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetPerson", ReplyAction="http://tempuri.org/ITreeService/GetPersonResponse")]
        TestConsole.TreeServiceReference.PersonDto GetPerson(System.Guid personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetPerson", ReplyAction="http://tempuri.org/ITreeService/GetPersonResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.PersonDto> GetPersonAsync(System.Guid personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdatePerson", ReplyAction="http://tempuri.org/ITreeService/UpdatePersonResponse")]
        void UpdatePerson(TestConsole.TreeServiceReference.PersonDto personDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdatePerson", ReplyAction="http://tempuri.org/ITreeService/UpdatePersonResponse")]
        System.Threading.Tasks.Task UpdatePersonAsync(TestConsole.TreeServiceReference.PersonDto personDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateReportTypeGroup", ReplyAction="http://tempuri.org/ITreeService/CreateReportTypeGroupResponse")]
        TestConsole.TreeServiceReference.ReportTypeGroupDto CreateReportTypeGroup(TestConsole.TreeServiceReference.ReportTypeGroupDto reportTypeGroupDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateReportTypeGroup", ReplyAction="http://tempuri.org/ITreeService/CreateReportTypeGroupResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeGroupDto> CreateReportTypeGroupAsync(TestConsole.TreeServiceReference.ReportTypeGroupDto reportTypeGroupDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReportTypeGroup", ReplyAction="http://tempuri.org/ITreeService/GetReportTypeGroupResponse")]
        TestConsole.TreeServiceReference.ReportTypeGroupDto GetReportTypeGroup(System.Guid reportTypeGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReportTypeGroup", ReplyAction="http://tempuri.org/ITreeService/GetReportTypeGroupResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeGroupDto> GetReportTypeGroupAsync(System.Guid reportTypeGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReportTypeGroups", ReplyAction="http://tempuri.org/ITreeService/GetReportTypeGroupsResponse")]
        TestConsole.TreeServiceReference.ReportTypeGroupDto[] GetReportTypeGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReportTypeGroups", ReplyAction="http://tempuri.org/ITreeService/GetReportTypeGroupsResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeGroupDto[]> GetReportTypeGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateReportTypeGroup", ReplyAction="http://tempuri.org/ITreeService/UpdateReportTypeGroupResponse")]
        void UpdateReportTypeGroup(TestConsole.TreeServiceReference.ReportTypeGroupDto reportTypeGroupDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateReportTypeGroup", ReplyAction="http://tempuri.org/ITreeService/UpdateReportTypeGroupResponse")]
        System.Threading.Tasks.Task UpdateReportTypeGroupAsync(TestConsole.TreeServiceReference.ReportTypeGroupDto reportTypeGroupDto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITreeServiceChannel : TestConsole.TreeServiceReference.ITreeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TreeServiceClient : System.ServiceModel.ClientBase<TestConsole.TreeServiceReference.ITreeService>, TestConsole.TreeServiceReference.ITreeService {
        
        public TreeServiceClient() {
        }
        
        public TreeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TreeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TreeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TreeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetSystemObjects() {
            return base.Channel.GetSystemObjects();
        }
        
        public System.Threading.Tasks.Task<string[]> GetSystemObjectsAsync() {
            return base.Channel.GetSystemObjectsAsync();
        }
        
        public TestConsole.TreeServiceReference.VirtualTreeDto[] GetTrees(System.Nullable<System.Guid> parent, System.Guid treeParentType, bool includeParent, bool includeDeleted) {
            return base.Channel.GetTrees(parent, treeParentType, includeParent, includeDeleted);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.VirtualTreeDto[]> GetTreesAsync(System.Nullable<System.Guid> parent, System.Guid treeParentType, bool includeParent, bool includeDeleted) {
            return base.Channel.GetTreesAsync(parent, treeParentType, includeParent, includeDeleted);
        }
        
        public TestConsole.TreeServiceReference.VirtualTreeDto[] GetTreeParents(System.Nullable<System.Guid> parent, System.Guid child, System.Guid treeParentType, bool includeChild, bool includeDeleted) {
            return base.Channel.GetTreeParents(parent, child, treeParentType, includeChild, includeDeleted);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.VirtualTreeDto[]> GetTreeParentsAsync(System.Nullable<System.Guid> parent, System.Guid child, System.Guid treeParentType, bool includeChild, bool includeDeleted) {
            return base.Channel.GetTreeParentsAsync(parent, child, treeParentType, includeChild, includeDeleted);
        }
        
        public TestConsole.TreeServiceReference.VirtualTreeDto[] SearchTreesByText(string searchText, System.Guid treeParentType, System.Guid[] typeIds, System.Guid[] ignoreTypeIds, System.Nullable<System.Guid> parent) {
            return base.Channel.SearchTreesByText(searchText, treeParentType, typeIds, ignoreTypeIds, parent);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.VirtualTreeDto[]> SearchTreesByTextAsync(string searchText, System.Guid treeParentType, System.Guid[] typeIds, System.Guid[] ignoreTypeIds, System.Nullable<System.Guid> parent) {
            return base.Channel.SearchTreesByTextAsync(searchText, treeParentType, typeIds, ignoreTypeIds, parent);
        }
        
        public TestConsole.TreeServiceReference.TreeDto CreateTree(TestConsole.TreeServiceReference.TreeDto treeDto) {
            return base.Channel.CreateTree(treeDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.TreeDto> CreateTreeAsync(TestConsole.TreeServiceReference.TreeDto treeDto) {
            return base.Channel.CreateTreeAsync(treeDto);
        }
        
        public TestConsole.TreeServiceReference.TreeDto GetTree(System.Guid treeId) {
            return base.Channel.GetTree(treeId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.TreeDto> GetTreeAsync(System.Guid treeId) {
            return base.Channel.GetTreeAsync(treeId);
        }
        
        public void UpdateTree(TestConsole.TreeServiceReference.TreeDto treeDto) {
            base.Channel.UpdateTree(treeDto);
        }
        
        public System.Threading.Tasks.Task UpdateTreeAsync(TestConsole.TreeServiceReference.TreeDto treeDto) {
            return base.Channel.UpdateTreeAsync(treeDto);
        }
        
        public void DeleteTree(TestConsole.TreeServiceReference.TreeDto treeDto) {
            base.Channel.DeleteTree(treeDto);
        }
        
        public System.Threading.Tasks.Task DeleteTreeAsync(TestConsole.TreeServiceReference.TreeDto treeDto) {
            return base.Channel.DeleteTreeAsync(treeDto);
        }
        
        public TestConsole.TreeServiceReference.UserDto CreateUser(TestConsole.TreeServiceReference.UserDto userDto) {
            return base.Channel.CreateUser(userDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.UserDto> CreateUserAsync(TestConsole.TreeServiceReference.UserDto userDto) {
            return base.Channel.CreateUserAsync(userDto);
        }
        
        public TestConsole.TreeServiceReference.UserDto GetUser(System.Guid userId) {
            return base.Channel.GetUser(userId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.UserDto> GetUserAsync(System.Guid userId) {
            return base.Channel.GetUserAsync(userId);
        }
        
        public void UpdateUser(TestConsole.TreeServiceReference.UserDto userDto) {
            base.Channel.UpdateUser(userDto);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(TestConsole.TreeServiceReference.UserDto userDto) {
            return base.Channel.UpdateUserAsync(userDto);
        }
        
        public TestConsole.TreeServiceReference.UserDto FindUserByLogin(string login) {
            return base.Channel.FindUserByLogin(login);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.UserDto> FindUserByLoginAsync(string login) {
            return base.Channel.FindUserByLoginAsync(login);
        }
        
        public TestConsole.TreeServiceReference.UserDto AuthenticateUser(string login, string password) {
            return base.Channel.AuthenticateUser(login, password);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.UserDto> AuthenticateUserAsync(string login, string password) {
            return base.Channel.AuthenticateUserAsync(login, password);
        }
        
        public TestConsole.TreeServiceReference.PersonDto CreatePerson(TestConsole.TreeServiceReference.PersonDto personDto) {
            return base.Channel.CreatePerson(personDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.PersonDto> CreatePersonAsync(TestConsole.TreeServiceReference.PersonDto personDto) {
            return base.Channel.CreatePersonAsync(personDto);
        }
        
        public TestConsole.TreeServiceReference.PersonDto GetPerson(System.Guid personId) {
            return base.Channel.GetPerson(personId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.PersonDto> GetPersonAsync(System.Guid personId) {
            return base.Channel.GetPersonAsync(personId);
        }
        
        public void UpdatePerson(TestConsole.TreeServiceReference.PersonDto personDto) {
            base.Channel.UpdatePerson(personDto);
        }
        
        public System.Threading.Tasks.Task UpdatePersonAsync(TestConsole.TreeServiceReference.PersonDto personDto) {
            return base.Channel.UpdatePersonAsync(personDto);
        }
        
        public TestConsole.TreeServiceReference.ReportTypeGroupDto CreateReportTypeGroup(TestConsole.TreeServiceReference.ReportTypeGroupDto reportTypeGroupDto) {
            return base.Channel.CreateReportTypeGroup(reportTypeGroupDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeGroupDto> CreateReportTypeGroupAsync(TestConsole.TreeServiceReference.ReportTypeGroupDto reportTypeGroupDto) {
            return base.Channel.CreateReportTypeGroupAsync(reportTypeGroupDto);
        }
        
        public TestConsole.TreeServiceReference.ReportTypeGroupDto GetReportTypeGroup(System.Guid reportTypeGroupId) {
            return base.Channel.GetReportTypeGroup(reportTypeGroupId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeGroupDto> GetReportTypeGroupAsync(System.Guid reportTypeGroupId) {
            return base.Channel.GetReportTypeGroupAsync(reportTypeGroupId);
        }
        
        public TestConsole.TreeServiceReference.ReportTypeGroupDto[] GetReportTypeGroups() {
            return base.Channel.GetReportTypeGroups();
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeGroupDto[]> GetReportTypeGroupsAsync() {
            return base.Channel.GetReportTypeGroupsAsync();
        }
        
        public void UpdateReportTypeGroup(TestConsole.TreeServiceReference.ReportTypeGroupDto reportTypeGroupDto) {
            base.Channel.UpdateReportTypeGroup(reportTypeGroupDto);
        }
        
        public System.Threading.Tasks.Task UpdateReportTypeGroupAsync(TestConsole.TreeServiceReference.ReportTypeGroupDto reportTypeGroupDto) {
            return base.Channel.UpdateReportTypeGroupAsync(reportTypeGroupDto);
        }
    }
}
