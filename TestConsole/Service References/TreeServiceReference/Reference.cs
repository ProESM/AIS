//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestConsole.TreeServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VirtualTreeDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class VirtualTreeDto : TestConsole.TreeServiceReference.TreeDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasChildrenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasChildren {
            get {
                return this.HasChildrenField;
            }
            set {
                if ((this.HasChildrenField.Equals(value) != true)) {
                    this.HasChildrenField = value;
                    this.RaisePropertyChanged("HasChildren");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.ReportDataDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.BaseTreeDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.UserDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.PersonDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.DocumentDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.ReportDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.ReportTypeGroupDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.ReportTypeDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.DistrictDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.TreeDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.DocumentTypeDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.JuridicalPersonDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.InstituteDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.RegionDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.EducationLevelDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.LocalityTypeDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.VirtualTreeDto))]
    public partial class BaseDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportDataDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class ReportDataDto : TestConsole.TreeServiceReference.BaseDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColumnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Column {
            get {
                return this.ColumnField;
            }
            set {
                if ((this.ColumnField.Equals(value) != true)) {
                    this.ColumnField = value;
                    this.RaisePropertyChanged("Column");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Page {
            get {
                return this.PageField;
            }
            set {
                if ((this.PageField.Equals(value) != true)) {
                    this.PageField = value;
                    this.RaisePropertyChanged("Page");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ReportId {
            get {
                return this.ReportIdField;
            }
            set {
                if ((this.ReportIdField.Equals(value) != true)) {
                    this.ReportIdField = value;
                    this.RaisePropertyChanged("ReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Row {
            get {
                return this.RowField;
            }
            set {
                if ((this.RowField.Equals(value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseTreeDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.UserDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.PersonDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.DocumentDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.ReportDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.ReportTypeGroupDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.ReportTypeDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.DistrictDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.TreeDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.DocumentTypeDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.JuridicalPersonDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.InstituteDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.RegionDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.EducationLevelDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.LocalityTypeDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.VirtualTreeDto))]
    public partial class BaseTreeDto : TestConsole.TreeServiceReference.BaseDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TypeIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDateTime {
            get {
                return this.CreateDateTimeField;
            }
            set {
                if ((this.CreateDateTimeField.Equals(value) != true)) {
                    this.CreateDateTimeField = value;
                    this.RaisePropertyChanged("CreateDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StateId {
            get {
                return this.StateIdField;
            }
            set {
                if ((this.StateIdField.Equals(value) != true)) {
                    this.StateIdField = value;
                    this.RaisePropertyChanged("StateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TypeId {
            get {
                return this.TypeIdField;
            }
            set {
                if ((this.TypeIdField.Equals(value) != true)) {
                    this.TypeIdField = value;
                    this.RaisePropertyChanged("TypeId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class UserDto : TestConsole.TreeServiceReference.BaseTreeDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserGroupNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salt {
            get {
                return this.SaltField;
            }
            set {
                if ((object.ReferenceEquals(this.SaltField, value) != true)) {
                    this.SaltField = value;
                    this.RaisePropertyChanged("Salt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserGroupId {
            get {
                return this.UserGroupIdField;
            }
            set {
                if ((this.UserGroupIdField.Equals(value) != true)) {
                    this.UserGroupIdField = value;
                    this.RaisePropertyChanged("UserGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserGroupName {
            get {
                return this.UserGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserGroupNameField, value) != true)) {
                    this.UserGroupNameField = value;
                    this.RaisePropertyChanged("UserGroupName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class PersonDto : TestConsole.TreeServiceReference.BaseTreeDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatronymicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patronymic {
            get {
                return this.PatronymicField;
            }
            set {
                if ((object.ReferenceEquals(this.PatronymicField, value) != true)) {
                    this.PatronymicField = value;
                    this.RaisePropertyChanged("Patronymic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.ReportDto))]
    public partial class DocumentDto : TestConsole.TreeServiceReference.BaseTreeDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> DocumentParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentParentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DocumentStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentStateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DocumentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DocumentUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> DocumentParentId {
            get {
                return this.DocumentParentIdField;
            }
            set {
                if ((this.DocumentParentIdField.Equals(value) != true)) {
                    this.DocumentParentIdField = value;
                    this.RaisePropertyChanged("DocumentParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentParentName {
            get {
                return this.DocumentParentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentParentNameField, value) != true)) {
                    this.DocumentParentNameField = value;
                    this.RaisePropertyChanged("DocumentParentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DocumentStateId {
            get {
                return this.DocumentStateIdField;
            }
            set {
                if ((this.DocumentStateIdField.Equals(value) != true)) {
                    this.DocumentStateIdField = value;
                    this.RaisePropertyChanged("DocumentStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentStateName {
            get {
                return this.DocumentStateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentStateNameField, value) != true)) {
                    this.DocumentStateNameField = value;
                    this.RaisePropertyChanged("DocumentStateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DocumentTypeId {
            get {
                return this.DocumentTypeIdField;
            }
            set {
                if ((this.DocumentTypeIdField.Equals(value) != true)) {
                    this.DocumentTypeIdField = value;
                    this.RaisePropertyChanged("DocumentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentTypeName {
            get {
                return this.DocumentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeNameField, value) != true)) {
                    this.DocumentTypeNameField = value;
                    this.RaisePropertyChanged("DocumentTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DocumentUserId {
            get {
                return this.DocumentUserIdField;
            }
            set {
                if ((this.DocumentUserIdField.Equals(value) != true)) {
                    this.DocumentUserIdField = value;
                    this.RaisePropertyChanged("DocumentUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentUserName {
            get {
                return this.DocumentUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentUserNameField, value) != true)) {
                    this.DocumentUserNameField = value;
                    this.RaisePropertyChanged("DocumentUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class ReportDto : TestConsole.TreeServiceReference.DocumentDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryFillingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FillingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RecipientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ReportTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportTypeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiryFillingDate {
            get {
                return this.ExpiryFillingDateField;
            }
            set {
                if ((this.ExpiryFillingDateField.Equals(value) != true)) {
                    this.ExpiryFillingDateField = value;
                    this.RaisePropertyChanged("ExpiryFillingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FillingDate {
            get {
                return this.FillingDateField;
            }
            set {
                if ((this.FillingDateField.Equals(value) != true)) {
                    this.FillingDateField = value;
                    this.RaisePropertyChanged("FillingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RecipientId {
            get {
                return this.RecipientIdField;
            }
            set {
                if ((this.RecipientIdField.Equals(value) != true)) {
                    this.RecipientIdField = value;
                    this.RaisePropertyChanged("RecipientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientName {
            get {
                return this.RecipientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientNameField, value) != true)) {
                    this.RecipientNameField = value;
                    this.RaisePropertyChanged("RecipientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ReportTypeId {
            get {
                return this.ReportTypeIdField;
            }
            set {
                if ((this.ReportTypeIdField.Equals(value) != true)) {
                    this.ReportTypeIdField = value;
                    this.RaisePropertyChanged("ReportTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportTypeName {
            get {
                return this.ReportTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportTypeNameField, value) != true)) {
                    this.ReportTypeNameField = value;
                    this.RaisePropertyChanged("ReportTypeName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportTypeGroupDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class ReportTypeGroupDto : TestConsole.TreeServiceReference.BaseTreeDto {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportTypeDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class ReportTypeDto : TestConsole.TreeServiceReference.BaseTreeDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DistrictDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class DistrictDto : TestConsole.TreeServiceReference.BaseTreeDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TreeDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.DocumentTypeDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.JuridicalPersonDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.InstituteDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.RegionDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.EducationLevelDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.LocalityTypeDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.VirtualTreeDto))]
    public partial class TreeDto : TestConsole.TreeServiceReference.BaseTreeDto {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentTypeDto", Namespace="http://schemas.datacontract.org/2004/07/DTO.TreeTypeDtos")]
    [System.SerializableAttribute()]
    public partial class DocumentTypeDto : TestConsole.TreeServiceReference.TreeDto {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JuridicalPersonDto", Namespace="http://schemas.datacontract.org/2004/07/DTO.TreeTypeDtos")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestConsole.TreeServiceReference.InstituteDto))]
    public partial class JuridicalPersonDto : TestConsole.TreeServiceReference.TreeDto {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstituteDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class InstituteDto : TestConsole.TreeServiceReference.JuridicalPersonDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EducationLevelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EducationLevelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LocalityTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalityTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EducationLevelId {
            get {
                return this.EducationLevelIdField;
            }
            set {
                if ((this.EducationLevelIdField.Equals(value) != true)) {
                    this.EducationLevelIdField = value;
                    this.RaisePropertyChanged("EducationLevelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EducationLevelName {
            get {
                return this.EducationLevelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationLevelNameField, value) != true)) {
                    this.EducationLevelNameField = value;
                    this.RaisePropertyChanged("EducationLevelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LocalityTypeId {
            get {
                return this.LocalityTypeIdField;
            }
            set {
                if ((this.LocalityTypeIdField.Equals(value) != true)) {
                    this.LocalityTypeIdField = value;
                    this.RaisePropertyChanged("LocalityTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalityTypeName {
            get {
                return this.LocalityTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalityTypeNameField, value) != true)) {
                    this.LocalityTypeNameField = value;
                    this.RaisePropertyChanged("LocalityTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegionDto", Namespace="http://schemas.datacontract.org/2004/07/DTO.TreeTypeDtos")]
    [System.SerializableAttribute()]
    public partial class RegionDto : TestConsole.TreeServiceReference.TreeDto {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EducationLevelDto", Namespace="http://schemas.datacontract.org/2004/07/DTO.TreeTypeDtos")]
    [System.SerializableAttribute()]
    public partial class EducationLevelDto : TestConsole.TreeServiceReference.TreeDto {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalityTypeDto", Namespace="http://schemas.datacontract.org/2004/07/DTO.TreeTypeDtos")]
    [System.SerializableAttribute()]
    public partial class LocalityTypeDto : TestConsole.TreeServiceReference.TreeDto {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TreeServiceReference.ITreeService")]
    public interface ITreeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetSystemObjects", ReplyAction="http://tempuri.org/ITreeService/GetSystemObjectsResponse")]
        string[] GetSystemObjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetSystemObjects", ReplyAction="http://tempuri.org/ITreeService/GetSystemObjectsResponse")]
        System.Threading.Tasks.Task<string[]> GetSystemObjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetTrees", ReplyAction="http://tempuri.org/ITreeService/GetTreesResponse")]
        TestConsole.TreeServiceReference.VirtualTreeDto[] GetTrees(System.Nullable<System.Guid> parent, System.Guid treeParentType, bool includeParent, bool includeDeleted, bool includeSubChildren);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetTrees", ReplyAction="http://tempuri.org/ITreeService/GetTreesResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.VirtualTreeDto[]> GetTreesAsync(System.Nullable<System.Guid> parent, System.Guid treeParentType, bool includeParent, bool includeDeleted, bool includeSubChildren);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetTreeParents", ReplyAction="http://tempuri.org/ITreeService/GetTreeParentsResponse")]
        TestConsole.TreeServiceReference.VirtualTreeDto[] GetTreeParents(System.Nullable<System.Guid> parent, System.Guid child, System.Guid treeParentType, bool includeChild, bool includeDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetTreeParents", ReplyAction="http://tempuri.org/ITreeService/GetTreeParentsResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.VirtualTreeDto[]> GetTreeParentsAsync(System.Nullable<System.Guid> parent, System.Guid child, System.Guid treeParentType, bool includeChild, bool includeDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/SearchTreesByText", ReplyAction="http://tempuri.org/ITreeService/SearchTreesByTextResponse")]
        TestConsole.TreeServiceReference.VirtualTreeDto[] SearchTreesByText(string searchText, System.Guid treeParentType, System.Guid[] typeIds, System.Guid[] ignoreTypeIds, System.Nullable<System.Guid> parent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/SearchTreesByText", ReplyAction="http://tempuri.org/ITreeService/SearchTreesByTextResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.VirtualTreeDto[]> SearchTreesByTextAsync(string searchText, System.Guid treeParentType, System.Guid[] typeIds, System.Guid[] ignoreTypeIds, System.Nullable<System.Guid> parent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateTree", ReplyAction="http://tempuri.org/ITreeService/CreateTreeResponse")]
        TestConsole.TreeServiceReference.TreeDto CreateTree(TestConsole.TreeServiceReference.TreeDto treeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateTree", ReplyAction="http://tempuri.org/ITreeService/CreateTreeResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.TreeDto> CreateTreeAsync(TestConsole.TreeServiceReference.TreeDto treeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetTree", ReplyAction="http://tempuri.org/ITreeService/GetTreeResponse")]
        TestConsole.TreeServiceReference.TreeDto GetTree(System.Guid treeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetTree", ReplyAction="http://tempuri.org/ITreeService/GetTreeResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.TreeDto> GetTreeAsync(System.Guid treeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateTree", ReplyAction="http://tempuri.org/ITreeService/UpdateTreeResponse")]
        void UpdateTree(TestConsole.TreeServiceReference.TreeDto treeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateTree", ReplyAction="http://tempuri.org/ITreeService/UpdateTreeResponse")]
        System.Threading.Tasks.Task UpdateTreeAsync(TestConsole.TreeServiceReference.TreeDto treeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/DeleteTree", ReplyAction="http://tempuri.org/ITreeService/DeleteTreeResponse")]
        void DeleteTree(TestConsole.TreeServiceReference.TreeDto treeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/DeleteTree", ReplyAction="http://tempuri.org/ITreeService/DeleteTreeResponse")]
        System.Threading.Tasks.Task DeleteTreeAsync(TestConsole.TreeServiceReference.TreeDto treeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateUser", ReplyAction="http://tempuri.org/ITreeService/CreateUserResponse")]
        TestConsole.TreeServiceReference.UserDto CreateUser(TestConsole.TreeServiceReference.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateUser", ReplyAction="http://tempuri.org/ITreeService/CreateUserResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.UserDto> CreateUserAsync(TestConsole.TreeServiceReference.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetUser", ReplyAction="http://tempuri.org/ITreeService/GetUserResponse")]
        TestConsole.TreeServiceReference.UserDto GetUser(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetUser", ReplyAction="http://tempuri.org/ITreeService/GetUserResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.UserDto> GetUserAsync(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateUser", ReplyAction="http://tempuri.org/ITreeService/UpdateUserResponse")]
        void UpdateUser(TestConsole.TreeServiceReference.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateUser", ReplyAction="http://tempuri.org/ITreeService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(TestConsole.TreeServiceReference.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/FindUserByLogin", ReplyAction="http://tempuri.org/ITreeService/FindUserByLoginResponse")]
        TestConsole.TreeServiceReference.UserDto FindUserByLogin(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/FindUserByLogin", ReplyAction="http://tempuri.org/ITreeService/FindUserByLoginResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.UserDto> FindUserByLoginAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/AuthenticateUser", ReplyAction="http://tempuri.org/ITreeService/AuthenticateUserResponse")]
        TestConsole.TreeServiceReference.UserDto AuthenticateUser(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/AuthenticateUser", ReplyAction="http://tempuri.org/ITreeService/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.UserDto> AuthenticateUserAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreatePerson", ReplyAction="http://tempuri.org/ITreeService/CreatePersonResponse")]
        TestConsole.TreeServiceReference.PersonDto CreatePerson(TestConsole.TreeServiceReference.PersonDto personDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreatePerson", ReplyAction="http://tempuri.org/ITreeService/CreatePersonResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.PersonDto> CreatePersonAsync(TestConsole.TreeServiceReference.PersonDto personDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetPerson", ReplyAction="http://tempuri.org/ITreeService/GetPersonResponse")]
        TestConsole.TreeServiceReference.PersonDto GetPerson(System.Guid personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetPerson", ReplyAction="http://tempuri.org/ITreeService/GetPersonResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.PersonDto> GetPersonAsync(System.Guid personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdatePerson", ReplyAction="http://tempuri.org/ITreeService/UpdatePersonResponse")]
        void UpdatePerson(TestConsole.TreeServiceReference.PersonDto personDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdatePerson", ReplyAction="http://tempuri.org/ITreeService/UpdatePersonResponse")]
        System.Threading.Tasks.Task UpdatePersonAsync(TestConsole.TreeServiceReference.PersonDto personDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateDocumentType", ReplyAction="http://tempuri.org/ITreeService/CreateDocumentTypeResponse")]
        TestConsole.TreeServiceReference.DocumentTypeDto CreateDocumentType(TestConsole.TreeServiceReference.DocumentTypeDto documentTypeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateDocumentType", ReplyAction="http://tempuri.org/ITreeService/CreateDocumentTypeResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.DocumentTypeDto> CreateDocumentTypeAsync(TestConsole.TreeServiceReference.DocumentTypeDto documentTypeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetDocumentType", ReplyAction="http://tempuri.org/ITreeService/GetDocumentTypeResponse")]
        TestConsole.TreeServiceReference.DocumentTypeDto GetDocumentType(System.Guid documentTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetDocumentType", ReplyAction="http://tempuri.org/ITreeService/GetDocumentTypeResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.DocumentTypeDto> GetDocumentTypeAsync(System.Guid documentTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetDocumentTypes", ReplyAction="http://tempuri.org/ITreeService/GetDocumentTypesResponse")]
        TestConsole.TreeServiceReference.DocumentTypeDto[] GetDocumentTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetDocumentTypes", ReplyAction="http://tempuri.org/ITreeService/GetDocumentTypesResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.DocumentTypeDto[]> GetDocumentTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateDocumentType", ReplyAction="http://tempuri.org/ITreeService/UpdateDocumentTypeResponse")]
        void UpdateDocumentType(TestConsole.TreeServiceReference.DocumentTypeDto documentTypeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateDocumentType", ReplyAction="http://tempuri.org/ITreeService/UpdateDocumentTypeResponse")]
        System.Threading.Tasks.Task UpdateDocumentTypeAsync(TestConsole.TreeServiceReference.DocumentTypeDto documentTypeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateDocument", ReplyAction="http://tempuri.org/ITreeService/CreateDocumentResponse")]
        TestConsole.TreeServiceReference.DocumentDto CreateDocument(TestConsole.TreeServiceReference.DocumentDto documentDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateDocument", ReplyAction="http://tempuri.org/ITreeService/CreateDocumentResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.DocumentDto> CreateDocumentAsync(TestConsole.TreeServiceReference.DocumentDto documentDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetDocument", ReplyAction="http://tempuri.org/ITreeService/GetDocumentResponse")]
        TestConsole.TreeServiceReference.DocumentDto GetDocument(System.Guid documentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetDocument", ReplyAction="http://tempuri.org/ITreeService/GetDocumentResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.DocumentDto> GetDocumentAsync(System.Guid documentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetDocuments", ReplyAction="http://tempuri.org/ITreeService/GetDocumentsResponse")]
        TestConsole.TreeServiceReference.DocumentDto[] GetDocuments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetDocuments", ReplyAction="http://tempuri.org/ITreeService/GetDocumentsResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.DocumentDto[]> GetDocumentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateDocument", ReplyAction="http://tempuri.org/ITreeService/UpdateDocumentResponse")]
        void UpdateDocument(TestConsole.TreeServiceReference.DocumentDto documentDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateDocument", ReplyAction="http://tempuri.org/ITreeService/UpdateDocumentResponse")]
        System.Threading.Tasks.Task UpdateDocumentAsync(TestConsole.TreeServiceReference.DocumentDto documentDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateReportTypeGroup", ReplyAction="http://tempuri.org/ITreeService/CreateReportTypeGroupResponse")]
        TestConsole.TreeServiceReference.ReportTypeGroupDto CreateReportTypeGroup(TestConsole.TreeServiceReference.ReportTypeGroupDto reportTypeGroupDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateReportTypeGroup", ReplyAction="http://tempuri.org/ITreeService/CreateReportTypeGroupResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeGroupDto> CreateReportTypeGroupAsync(TestConsole.TreeServiceReference.ReportTypeGroupDto reportTypeGroupDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReportTypeGroup", ReplyAction="http://tempuri.org/ITreeService/GetReportTypeGroupResponse")]
        TestConsole.TreeServiceReference.ReportTypeGroupDto GetReportTypeGroup(System.Guid reportTypeGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReportTypeGroup", ReplyAction="http://tempuri.org/ITreeService/GetReportTypeGroupResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeGroupDto> GetReportTypeGroupAsync(System.Guid reportTypeGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReportTypeGroups", ReplyAction="http://tempuri.org/ITreeService/GetReportTypeGroupsResponse")]
        TestConsole.TreeServiceReference.ReportTypeGroupDto[] GetReportTypeGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReportTypeGroups", ReplyAction="http://tempuri.org/ITreeService/GetReportTypeGroupsResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeGroupDto[]> GetReportTypeGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateReportTypeGroup", ReplyAction="http://tempuri.org/ITreeService/UpdateReportTypeGroupResponse")]
        void UpdateReportTypeGroup(TestConsole.TreeServiceReference.ReportTypeGroupDto reportTypeGroupDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateReportTypeGroup", ReplyAction="http://tempuri.org/ITreeService/UpdateReportTypeGroupResponse")]
        System.Threading.Tasks.Task UpdateReportTypeGroupAsync(TestConsole.TreeServiceReference.ReportTypeGroupDto reportTypeGroupDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateReportType", ReplyAction="http://tempuri.org/ITreeService/CreateReportTypeResponse")]
        TestConsole.TreeServiceReference.ReportTypeDto CreateReportType(TestConsole.TreeServiceReference.ReportTypeDto reportTypeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateReportType", ReplyAction="http://tempuri.org/ITreeService/CreateReportTypeResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeDto> CreateReportTypeAsync(TestConsole.TreeServiceReference.ReportTypeDto reportTypeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReportType", ReplyAction="http://tempuri.org/ITreeService/GetReportTypeResponse")]
        TestConsole.TreeServiceReference.ReportTypeDto GetReportType(System.Guid reportTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReportType", ReplyAction="http://tempuri.org/ITreeService/GetReportTypeResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeDto> GetReportTypeAsync(System.Guid reportTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReportTypes", ReplyAction="http://tempuri.org/ITreeService/GetReportTypesResponse")]
        TestConsole.TreeServiceReference.ReportTypeDto[] GetReportTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReportTypes", ReplyAction="http://tempuri.org/ITreeService/GetReportTypesResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeDto[]> GetReportTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateReportType", ReplyAction="http://tempuri.org/ITreeService/UpdateReportTypeResponse")]
        void UpdateReportType(TestConsole.TreeServiceReference.ReportTypeDto reportTypeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateReportType", ReplyAction="http://tempuri.org/ITreeService/UpdateReportTypeResponse")]
        System.Threading.Tasks.Task UpdateReportTypeAsync(TestConsole.TreeServiceReference.ReportTypeDto reportTypeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateReport", ReplyAction="http://tempuri.org/ITreeService/CreateReportResponse")]
        TestConsole.TreeServiceReference.ReportDto CreateReport(TestConsole.TreeServiceReference.ReportDto reportDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateReport", ReplyAction="http://tempuri.org/ITreeService/CreateReportResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportDto> CreateReportAsync(TestConsole.TreeServiceReference.ReportDto reportDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReport", ReplyAction="http://tempuri.org/ITreeService/GetReportResponse")]
        TestConsole.TreeServiceReference.ReportDto GetReport(System.Guid reportId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReport", ReplyAction="http://tempuri.org/ITreeService/GetReportResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportDto> GetReportAsync(System.Guid reportId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReports", ReplyAction="http://tempuri.org/ITreeService/GetReportsResponse")]
        TestConsole.TreeServiceReference.ReportDto[] GetReports();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReports", ReplyAction="http://tempuri.org/ITreeService/GetReportsResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportDto[]> GetReportsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateReport", ReplyAction="http://tempuri.org/ITreeService/UpdateReportResponse")]
        void UpdateReport(TestConsole.TreeServiceReference.ReportDto reportDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateReport", ReplyAction="http://tempuri.org/ITreeService/UpdateReportResponse")]
        System.Threading.Tasks.Task UpdateReportAsync(TestConsole.TreeServiceReference.ReportDto reportDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReportDataByReport", ReplyAction="http://tempuri.org/ITreeService/GetReportDataByReportResponse")]
        TestConsole.TreeServiceReference.ReportDataDto[] GetReportDataByReport(System.Guid reportId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetReportDataByReport", ReplyAction="http://tempuri.org/ITreeService/GetReportDataByReportResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportDataDto[]> GetReportDataByReportAsync(System.Guid reportId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateJuridicalPerson", ReplyAction="http://tempuri.org/ITreeService/CreateJuridicalPersonResponse")]
        TestConsole.TreeServiceReference.JuridicalPersonDto CreateJuridicalPerson(TestConsole.TreeServiceReference.JuridicalPersonDto juridicalPersonDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateJuridicalPerson", ReplyAction="http://tempuri.org/ITreeService/CreateJuridicalPersonResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.JuridicalPersonDto> CreateJuridicalPersonAsync(TestConsole.TreeServiceReference.JuridicalPersonDto juridicalPersonDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetJuridicalPerson", ReplyAction="http://tempuri.org/ITreeService/GetJuridicalPersonResponse")]
        TestConsole.TreeServiceReference.JuridicalPersonDto GetJuridicalPerson(System.Guid juridicalPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetJuridicalPerson", ReplyAction="http://tempuri.org/ITreeService/GetJuridicalPersonResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.JuridicalPersonDto> GetJuridicalPersonAsync(System.Guid juridicalPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetJuridicalPersons", ReplyAction="http://tempuri.org/ITreeService/GetJuridicalPersonsResponse")]
        TestConsole.TreeServiceReference.JuridicalPersonDto[] GetJuridicalPersons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetJuridicalPersons", ReplyAction="http://tempuri.org/ITreeService/GetJuridicalPersonsResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.JuridicalPersonDto[]> GetJuridicalPersonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateJuridicalPerson", ReplyAction="http://tempuri.org/ITreeService/UpdateJuridicalPersonResponse")]
        void UpdateJuridicalPerson(TestConsole.TreeServiceReference.JuridicalPersonDto juridicalPersonDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateJuridicalPerson", ReplyAction="http://tempuri.org/ITreeService/UpdateJuridicalPersonResponse")]
        System.Threading.Tasks.Task UpdateJuridicalPersonAsync(TestConsole.TreeServiceReference.JuridicalPersonDto juridicalPersonDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateRegion", ReplyAction="http://tempuri.org/ITreeService/CreateRegionResponse")]
        TestConsole.TreeServiceReference.RegionDto CreateRegion(TestConsole.TreeServiceReference.RegionDto regionDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateRegion", ReplyAction="http://tempuri.org/ITreeService/CreateRegionResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.RegionDto> CreateRegionAsync(TestConsole.TreeServiceReference.RegionDto regionDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetRegion", ReplyAction="http://tempuri.org/ITreeService/GetRegionResponse")]
        TestConsole.TreeServiceReference.RegionDto GetRegion(System.Guid regionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetRegion", ReplyAction="http://tempuri.org/ITreeService/GetRegionResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.RegionDto> GetRegionAsync(System.Guid regionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateRegion", ReplyAction="http://tempuri.org/ITreeService/UpdateRegionResponse")]
        void UpdateRegion(TestConsole.TreeServiceReference.RegionDto regionDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateRegion", ReplyAction="http://tempuri.org/ITreeService/UpdateRegionResponse")]
        System.Threading.Tasks.Task UpdateRegionAsync(TestConsole.TreeServiceReference.RegionDto regionDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateDistrict", ReplyAction="http://tempuri.org/ITreeService/CreateDistrictResponse")]
        TestConsole.TreeServiceReference.DistrictDto CreateDistrict(TestConsole.TreeServiceReference.DistrictDto districtDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateDistrict", ReplyAction="http://tempuri.org/ITreeService/CreateDistrictResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.DistrictDto> CreateDistrictAsync(TestConsole.TreeServiceReference.DistrictDto districtDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetDistrict", ReplyAction="http://tempuri.org/ITreeService/GetDistrictResponse")]
        TestConsole.TreeServiceReference.DistrictDto GetDistrict(System.Guid districtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetDistrict", ReplyAction="http://tempuri.org/ITreeService/GetDistrictResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.DistrictDto> GetDistrictAsync(System.Guid districtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateDistrict", ReplyAction="http://tempuri.org/ITreeService/UpdateDistrictResponse")]
        void UpdateDistrict(TestConsole.TreeServiceReference.DistrictDto districtDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateDistrict", ReplyAction="http://tempuri.org/ITreeService/UpdateDistrictResponse")]
        System.Threading.Tasks.Task UpdateDistrictAsync(TestConsole.TreeServiceReference.DistrictDto districtDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateInstitute", ReplyAction="http://tempuri.org/ITreeService/CreateInstituteResponse")]
        TestConsole.TreeServiceReference.InstituteDto CreateInstitute(TestConsole.TreeServiceReference.InstituteDto instituteDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateInstitute", ReplyAction="http://tempuri.org/ITreeService/CreateInstituteResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.InstituteDto> CreateInstituteAsync(TestConsole.TreeServiceReference.InstituteDto instituteDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetInstitute", ReplyAction="http://tempuri.org/ITreeService/GetInstituteResponse")]
        TestConsole.TreeServiceReference.InstituteDto GetInstitute(System.Guid instituteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetInstitute", ReplyAction="http://tempuri.org/ITreeService/GetInstituteResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.InstituteDto> GetInstituteAsync(System.Guid instituteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateInstitute", ReplyAction="http://tempuri.org/ITreeService/UpdateInstituteResponse")]
        void UpdateInstitute(TestConsole.TreeServiceReference.InstituteDto instituteDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateInstitute", ReplyAction="http://tempuri.org/ITreeService/UpdateInstituteResponse")]
        System.Threading.Tasks.Task UpdateInstituteAsync(TestConsole.TreeServiceReference.InstituteDto instituteDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateEducationLevel", ReplyAction="http://tempuri.org/ITreeService/CreateEducationLevelResponse")]
        TestConsole.TreeServiceReference.EducationLevelDto CreateEducationLevel(TestConsole.TreeServiceReference.EducationLevelDto educationLevelDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateEducationLevel", ReplyAction="http://tempuri.org/ITreeService/CreateEducationLevelResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.EducationLevelDto> CreateEducationLevelAsync(TestConsole.TreeServiceReference.EducationLevelDto educationLevelDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetEducationLevel", ReplyAction="http://tempuri.org/ITreeService/GetEducationLevelResponse")]
        TestConsole.TreeServiceReference.EducationLevelDto GetEducationLevel(System.Guid educationLevelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetEducationLevel", ReplyAction="http://tempuri.org/ITreeService/GetEducationLevelResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.EducationLevelDto> GetEducationLevelAsync(System.Guid educationLevelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateEducationLevel", ReplyAction="http://tempuri.org/ITreeService/UpdateEducationLevelResponse")]
        void UpdateEducationLevel(TestConsole.TreeServiceReference.EducationLevelDto educationLevelDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateEducationLevel", ReplyAction="http://tempuri.org/ITreeService/UpdateEducationLevelResponse")]
        System.Threading.Tasks.Task UpdateEducationLevelAsync(TestConsole.TreeServiceReference.EducationLevelDto educationLevelDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateLocalityType", ReplyAction="http://tempuri.org/ITreeService/CreateLocalityTypeResponse")]
        TestConsole.TreeServiceReference.LocalityTypeDto CreateLocalityType(TestConsole.TreeServiceReference.LocalityTypeDto localityTypeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/CreateLocalityType", ReplyAction="http://tempuri.org/ITreeService/CreateLocalityTypeResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.LocalityTypeDto> CreateLocalityTypeAsync(TestConsole.TreeServiceReference.LocalityTypeDto localityTypeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetLocalityType", ReplyAction="http://tempuri.org/ITreeService/GetLocalityTypeResponse")]
        TestConsole.TreeServiceReference.LocalityTypeDto GetLocalityType(System.Guid localityTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/GetLocalityType", ReplyAction="http://tempuri.org/ITreeService/GetLocalityTypeResponse")]
        System.Threading.Tasks.Task<TestConsole.TreeServiceReference.LocalityTypeDto> GetLocalityTypeAsync(System.Guid localityTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateLocalityType", ReplyAction="http://tempuri.org/ITreeService/UpdateLocalityTypeResponse")]
        void UpdateLocalityType(TestConsole.TreeServiceReference.LocalityTypeDto localityTypeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITreeService/UpdateLocalityType", ReplyAction="http://tempuri.org/ITreeService/UpdateLocalityTypeResponse")]
        System.Threading.Tasks.Task UpdateLocalityTypeAsync(TestConsole.TreeServiceReference.LocalityTypeDto localityTypeDto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITreeServiceChannel : TestConsole.TreeServiceReference.ITreeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TreeServiceClient : System.ServiceModel.ClientBase<TestConsole.TreeServiceReference.ITreeService>, TestConsole.TreeServiceReference.ITreeService {
        
        public TreeServiceClient() {
        }
        
        public TreeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TreeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TreeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TreeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetSystemObjects() {
            return base.Channel.GetSystemObjects();
        }
        
        public System.Threading.Tasks.Task<string[]> GetSystemObjectsAsync() {
            return base.Channel.GetSystemObjectsAsync();
        }
        
        public TestConsole.TreeServiceReference.VirtualTreeDto[] GetTrees(System.Nullable<System.Guid> parent, System.Guid treeParentType, bool includeParent, bool includeDeleted, bool includeSubChildren) {
            return base.Channel.GetTrees(parent, treeParentType, includeParent, includeDeleted, includeSubChildren);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.VirtualTreeDto[]> GetTreesAsync(System.Nullable<System.Guid> parent, System.Guid treeParentType, bool includeParent, bool includeDeleted, bool includeSubChildren) {
            return base.Channel.GetTreesAsync(parent, treeParentType, includeParent, includeDeleted, includeSubChildren);
        }
        
        public TestConsole.TreeServiceReference.VirtualTreeDto[] GetTreeParents(System.Nullable<System.Guid> parent, System.Guid child, System.Guid treeParentType, bool includeChild, bool includeDeleted) {
            return base.Channel.GetTreeParents(parent, child, treeParentType, includeChild, includeDeleted);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.VirtualTreeDto[]> GetTreeParentsAsync(System.Nullable<System.Guid> parent, System.Guid child, System.Guid treeParentType, bool includeChild, bool includeDeleted) {
            return base.Channel.GetTreeParentsAsync(parent, child, treeParentType, includeChild, includeDeleted);
        }
        
        public TestConsole.TreeServiceReference.VirtualTreeDto[] SearchTreesByText(string searchText, System.Guid treeParentType, System.Guid[] typeIds, System.Guid[] ignoreTypeIds, System.Nullable<System.Guid> parent) {
            return base.Channel.SearchTreesByText(searchText, treeParentType, typeIds, ignoreTypeIds, parent);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.VirtualTreeDto[]> SearchTreesByTextAsync(string searchText, System.Guid treeParentType, System.Guid[] typeIds, System.Guid[] ignoreTypeIds, System.Nullable<System.Guid> parent) {
            return base.Channel.SearchTreesByTextAsync(searchText, treeParentType, typeIds, ignoreTypeIds, parent);
        }
        
        public TestConsole.TreeServiceReference.TreeDto CreateTree(TestConsole.TreeServiceReference.TreeDto treeDto) {
            return base.Channel.CreateTree(treeDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.TreeDto> CreateTreeAsync(TestConsole.TreeServiceReference.TreeDto treeDto) {
            return base.Channel.CreateTreeAsync(treeDto);
        }
        
        public TestConsole.TreeServiceReference.TreeDto GetTree(System.Guid treeId) {
            return base.Channel.GetTree(treeId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.TreeDto> GetTreeAsync(System.Guid treeId) {
            return base.Channel.GetTreeAsync(treeId);
        }
        
        public void UpdateTree(TestConsole.TreeServiceReference.TreeDto treeDto) {
            base.Channel.UpdateTree(treeDto);
        }
        
        public System.Threading.Tasks.Task UpdateTreeAsync(TestConsole.TreeServiceReference.TreeDto treeDto) {
            return base.Channel.UpdateTreeAsync(treeDto);
        }
        
        public void DeleteTree(TestConsole.TreeServiceReference.TreeDto treeDto) {
            base.Channel.DeleteTree(treeDto);
        }
        
        public System.Threading.Tasks.Task DeleteTreeAsync(TestConsole.TreeServiceReference.TreeDto treeDto) {
            return base.Channel.DeleteTreeAsync(treeDto);
        }
        
        public TestConsole.TreeServiceReference.UserDto CreateUser(TestConsole.TreeServiceReference.UserDto userDto) {
            return base.Channel.CreateUser(userDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.UserDto> CreateUserAsync(TestConsole.TreeServiceReference.UserDto userDto) {
            return base.Channel.CreateUserAsync(userDto);
        }
        
        public TestConsole.TreeServiceReference.UserDto GetUser(System.Guid userId) {
            return base.Channel.GetUser(userId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.UserDto> GetUserAsync(System.Guid userId) {
            return base.Channel.GetUserAsync(userId);
        }
        
        public void UpdateUser(TestConsole.TreeServiceReference.UserDto userDto) {
            base.Channel.UpdateUser(userDto);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(TestConsole.TreeServiceReference.UserDto userDto) {
            return base.Channel.UpdateUserAsync(userDto);
        }
        
        public TestConsole.TreeServiceReference.UserDto FindUserByLogin(string login) {
            return base.Channel.FindUserByLogin(login);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.UserDto> FindUserByLoginAsync(string login) {
            return base.Channel.FindUserByLoginAsync(login);
        }
        
        public TestConsole.TreeServiceReference.UserDto AuthenticateUser(string login, string password) {
            return base.Channel.AuthenticateUser(login, password);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.UserDto> AuthenticateUserAsync(string login, string password) {
            return base.Channel.AuthenticateUserAsync(login, password);
        }
        
        public TestConsole.TreeServiceReference.PersonDto CreatePerson(TestConsole.TreeServiceReference.PersonDto personDto) {
            return base.Channel.CreatePerson(personDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.PersonDto> CreatePersonAsync(TestConsole.TreeServiceReference.PersonDto personDto) {
            return base.Channel.CreatePersonAsync(personDto);
        }
        
        public TestConsole.TreeServiceReference.PersonDto GetPerson(System.Guid personId) {
            return base.Channel.GetPerson(personId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.PersonDto> GetPersonAsync(System.Guid personId) {
            return base.Channel.GetPersonAsync(personId);
        }
        
        public void UpdatePerson(TestConsole.TreeServiceReference.PersonDto personDto) {
            base.Channel.UpdatePerson(personDto);
        }
        
        public System.Threading.Tasks.Task UpdatePersonAsync(TestConsole.TreeServiceReference.PersonDto personDto) {
            return base.Channel.UpdatePersonAsync(personDto);
        }
        
        public TestConsole.TreeServiceReference.DocumentTypeDto CreateDocumentType(TestConsole.TreeServiceReference.DocumentTypeDto documentTypeDto) {
            return base.Channel.CreateDocumentType(documentTypeDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.DocumentTypeDto> CreateDocumentTypeAsync(TestConsole.TreeServiceReference.DocumentTypeDto documentTypeDto) {
            return base.Channel.CreateDocumentTypeAsync(documentTypeDto);
        }
        
        public TestConsole.TreeServiceReference.DocumentTypeDto GetDocumentType(System.Guid documentTypeId) {
            return base.Channel.GetDocumentType(documentTypeId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.DocumentTypeDto> GetDocumentTypeAsync(System.Guid documentTypeId) {
            return base.Channel.GetDocumentTypeAsync(documentTypeId);
        }
        
        public TestConsole.TreeServiceReference.DocumentTypeDto[] GetDocumentTypes() {
            return base.Channel.GetDocumentTypes();
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.DocumentTypeDto[]> GetDocumentTypesAsync() {
            return base.Channel.GetDocumentTypesAsync();
        }
        
        public void UpdateDocumentType(TestConsole.TreeServiceReference.DocumentTypeDto documentTypeDto) {
            base.Channel.UpdateDocumentType(documentTypeDto);
        }
        
        public System.Threading.Tasks.Task UpdateDocumentTypeAsync(TestConsole.TreeServiceReference.DocumentTypeDto documentTypeDto) {
            return base.Channel.UpdateDocumentTypeAsync(documentTypeDto);
        }
        
        public TestConsole.TreeServiceReference.DocumentDto CreateDocument(TestConsole.TreeServiceReference.DocumentDto documentDto) {
            return base.Channel.CreateDocument(documentDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.DocumentDto> CreateDocumentAsync(TestConsole.TreeServiceReference.DocumentDto documentDto) {
            return base.Channel.CreateDocumentAsync(documentDto);
        }
        
        public TestConsole.TreeServiceReference.DocumentDto GetDocument(System.Guid documentId) {
            return base.Channel.GetDocument(documentId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.DocumentDto> GetDocumentAsync(System.Guid documentId) {
            return base.Channel.GetDocumentAsync(documentId);
        }
        
        public TestConsole.TreeServiceReference.DocumentDto[] GetDocuments() {
            return base.Channel.GetDocuments();
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.DocumentDto[]> GetDocumentsAsync() {
            return base.Channel.GetDocumentsAsync();
        }
        
        public void UpdateDocument(TestConsole.TreeServiceReference.DocumentDto documentDto) {
            base.Channel.UpdateDocument(documentDto);
        }
        
        public System.Threading.Tasks.Task UpdateDocumentAsync(TestConsole.TreeServiceReference.DocumentDto documentDto) {
            return base.Channel.UpdateDocumentAsync(documentDto);
        }
        
        public TestConsole.TreeServiceReference.ReportTypeGroupDto CreateReportTypeGroup(TestConsole.TreeServiceReference.ReportTypeGroupDto reportTypeGroupDto) {
            return base.Channel.CreateReportTypeGroup(reportTypeGroupDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeGroupDto> CreateReportTypeGroupAsync(TestConsole.TreeServiceReference.ReportTypeGroupDto reportTypeGroupDto) {
            return base.Channel.CreateReportTypeGroupAsync(reportTypeGroupDto);
        }
        
        public TestConsole.TreeServiceReference.ReportTypeGroupDto GetReportTypeGroup(System.Guid reportTypeGroupId) {
            return base.Channel.GetReportTypeGroup(reportTypeGroupId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeGroupDto> GetReportTypeGroupAsync(System.Guid reportTypeGroupId) {
            return base.Channel.GetReportTypeGroupAsync(reportTypeGroupId);
        }
        
        public TestConsole.TreeServiceReference.ReportTypeGroupDto[] GetReportTypeGroups() {
            return base.Channel.GetReportTypeGroups();
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeGroupDto[]> GetReportTypeGroupsAsync() {
            return base.Channel.GetReportTypeGroupsAsync();
        }
        
        public void UpdateReportTypeGroup(TestConsole.TreeServiceReference.ReportTypeGroupDto reportTypeGroupDto) {
            base.Channel.UpdateReportTypeGroup(reportTypeGroupDto);
        }
        
        public System.Threading.Tasks.Task UpdateReportTypeGroupAsync(TestConsole.TreeServiceReference.ReportTypeGroupDto reportTypeGroupDto) {
            return base.Channel.UpdateReportTypeGroupAsync(reportTypeGroupDto);
        }
        
        public TestConsole.TreeServiceReference.ReportTypeDto CreateReportType(TestConsole.TreeServiceReference.ReportTypeDto reportTypeDto) {
            return base.Channel.CreateReportType(reportTypeDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeDto> CreateReportTypeAsync(TestConsole.TreeServiceReference.ReportTypeDto reportTypeDto) {
            return base.Channel.CreateReportTypeAsync(reportTypeDto);
        }
        
        public TestConsole.TreeServiceReference.ReportTypeDto GetReportType(System.Guid reportTypeId) {
            return base.Channel.GetReportType(reportTypeId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeDto> GetReportTypeAsync(System.Guid reportTypeId) {
            return base.Channel.GetReportTypeAsync(reportTypeId);
        }
        
        public TestConsole.TreeServiceReference.ReportTypeDto[] GetReportTypes() {
            return base.Channel.GetReportTypes();
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportTypeDto[]> GetReportTypesAsync() {
            return base.Channel.GetReportTypesAsync();
        }
        
        public void UpdateReportType(TestConsole.TreeServiceReference.ReportTypeDto reportTypeDto) {
            base.Channel.UpdateReportType(reportTypeDto);
        }
        
        public System.Threading.Tasks.Task UpdateReportTypeAsync(TestConsole.TreeServiceReference.ReportTypeDto reportTypeDto) {
            return base.Channel.UpdateReportTypeAsync(reportTypeDto);
        }
        
        public TestConsole.TreeServiceReference.ReportDto CreateReport(TestConsole.TreeServiceReference.ReportDto reportDto) {
            return base.Channel.CreateReport(reportDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportDto> CreateReportAsync(TestConsole.TreeServiceReference.ReportDto reportDto) {
            return base.Channel.CreateReportAsync(reportDto);
        }
        
        public TestConsole.TreeServiceReference.ReportDto GetReport(System.Guid reportId) {
            return base.Channel.GetReport(reportId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportDto> GetReportAsync(System.Guid reportId) {
            return base.Channel.GetReportAsync(reportId);
        }
        
        public TestConsole.TreeServiceReference.ReportDto[] GetReports() {
            return base.Channel.GetReports();
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportDto[]> GetReportsAsync() {
            return base.Channel.GetReportsAsync();
        }
        
        public void UpdateReport(TestConsole.TreeServiceReference.ReportDto reportDto) {
            base.Channel.UpdateReport(reportDto);
        }
        
        public System.Threading.Tasks.Task UpdateReportAsync(TestConsole.TreeServiceReference.ReportDto reportDto) {
            return base.Channel.UpdateReportAsync(reportDto);
        }
        
        public TestConsole.TreeServiceReference.ReportDataDto[] GetReportDataByReport(System.Guid reportId) {
            return base.Channel.GetReportDataByReport(reportId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.ReportDataDto[]> GetReportDataByReportAsync(System.Guid reportId) {
            return base.Channel.GetReportDataByReportAsync(reportId);
        }
        
        public TestConsole.TreeServiceReference.JuridicalPersonDto CreateJuridicalPerson(TestConsole.TreeServiceReference.JuridicalPersonDto juridicalPersonDto) {
            return base.Channel.CreateJuridicalPerson(juridicalPersonDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.JuridicalPersonDto> CreateJuridicalPersonAsync(TestConsole.TreeServiceReference.JuridicalPersonDto juridicalPersonDto) {
            return base.Channel.CreateJuridicalPersonAsync(juridicalPersonDto);
        }
        
        public TestConsole.TreeServiceReference.JuridicalPersonDto GetJuridicalPerson(System.Guid juridicalPersonId) {
            return base.Channel.GetJuridicalPerson(juridicalPersonId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.JuridicalPersonDto> GetJuridicalPersonAsync(System.Guid juridicalPersonId) {
            return base.Channel.GetJuridicalPersonAsync(juridicalPersonId);
        }
        
        public TestConsole.TreeServiceReference.JuridicalPersonDto[] GetJuridicalPersons() {
            return base.Channel.GetJuridicalPersons();
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.JuridicalPersonDto[]> GetJuridicalPersonsAsync() {
            return base.Channel.GetJuridicalPersonsAsync();
        }
        
        public void UpdateJuridicalPerson(TestConsole.TreeServiceReference.JuridicalPersonDto juridicalPersonDto) {
            base.Channel.UpdateJuridicalPerson(juridicalPersonDto);
        }
        
        public System.Threading.Tasks.Task UpdateJuridicalPersonAsync(TestConsole.TreeServiceReference.JuridicalPersonDto juridicalPersonDto) {
            return base.Channel.UpdateJuridicalPersonAsync(juridicalPersonDto);
        }
        
        public TestConsole.TreeServiceReference.RegionDto CreateRegion(TestConsole.TreeServiceReference.RegionDto regionDto) {
            return base.Channel.CreateRegion(regionDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.RegionDto> CreateRegionAsync(TestConsole.TreeServiceReference.RegionDto regionDto) {
            return base.Channel.CreateRegionAsync(regionDto);
        }
        
        public TestConsole.TreeServiceReference.RegionDto GetRegion(System.Guid regionId) {
            return base.Channel.GetRegion(regionId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.RegionDto> GetRegionAsync(System.Guid regionId) {
            return base.Channel.GetRegionAsync(regionId);
        }
        
        public void UpdateRegion(TestConsole.TreeServiceReference.RegionDto regionDto) {
            base.Channel.UpdateRegion(regionDto);
        }
        
        public System.Threading.Tasks.Task UpdateRegionAsync(TestConsole.TreeServiceReference.RegionDto regionDto) {
            return base.Channel.UpdateRegionAsync(regionDto);
        }
        
        public TestConsole.TreeServiceReference.DistrictDto CreateDistrict(TestConsole.TreeServiceReference.DistrictDto districtDto) {
            return base.Channel.CreateDistrict(districtDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.DistrictDto> CreateDistrictAsync(TestConsole.TreeServiceReference.DistrictDto districtDto) {
            return base.Channel.CreateDistrictAsync(districtDto);
        }
        
        public TestConsole.TreeServiceReference.DistrictDto GetDistrict(System.Guid districtId) {
            return base.Channel.GetDistrict(districtId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.DistrictDto> GetDistrictAsync(System.Guid districtId) {
            return base.Channel.GetDistrictAsync(districtId);
        }
        
        public void UpdateDistrict(TestConsole.TreeServiceReference.DistrictDto districtDto) {
            base.Channel.UpdateDistrict(districtDto);
        }
        
        public System.Threading.Tasks.Task UpdateDistrictAsync(TestConsole.TreeServiceReference.DistrictDto districtDto) {
            return base.Channel.UpdateDistrictAsync(districtDto);
        }
        
        public TestConsole.TreeServiceReference.InstituteDto CreateInstitute(TestConsole.TreeServiceReference.InstituteDto instituteDto) {
            return base.Channel.CreateInstitute(instituteDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.InstituteDto> CreateInstituteAsync(TestConsole.TreeServiceReference.InstituteDto instituteDto) {
            return base.Channel.CreateInstituteAsync(instituteDto);
        }
        
        public TestConsole.TreeServiceReference.InstituteDto GetInstitute(System.Guid instituteId) {
            return base.Channel.GetInstitute(instituteId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.InstituteDto> GetInstituteAsync(System.Guid instituteId) {
            return base.Channel.GetInstituteAsync(instituteId);
        }
        
        public void UpdateInstitute(TestConsole.TreeServiceReference.InstituteDto instituteDto) {
            base.Channel.UpdateInstitute(instituteDto);
        }
        
        public System.Threading.Tasks.Task UpdateInstituteAsync(TestConsole.TreeServiceReference.InstituteDto instituteDto) {
            return base.Channel.UpdateInstituteAsync(instituteDto);
        }
        
        public TestConsole.TreeServiceReference.EducationLevelDto CreateEducationLevel(TestConsole.TreeServiceReference.EducationLevelDto educationLevelDto) {
            return base.Channel.CreateEducationLevel(educationLevelDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.EducationLevelDto> CreateEducationLevelAsync(TestConsole.TreeServiceReference.EducationLevelDto educationLevelDto) {
            return base.Channel.CreateEducationLevelAsync(educationLevelDto);
        }
        
        public TestConsole.TreeServiceReference.EducationLevelDto GetEducationLevel(System.Guid educationLevelId) {
            return base.Channel.GetEducationLevel(educationLevelId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.EducationLevelDto> GetEducationLevelAsync(System.Guid educationLevelId) {
            return base.Channel.GetEducationLevelAsync(educationLevelId);
        }
        
        public void UpdateEducationLevel(TestConsole.TreeServiceReference.EducationLevelDto educationLevelDto) {
            base.Channel.UpdateEducationLevel(educationLevelDto);
        }
        
        public System.Threading.Tasks.Task UpdateEducationLevelAsync(TestConsole.TreeServiceReference.EducationLevelDto educationLevelDto) {
            return base.Channel.UpdateEducationLevelAsync(educationLevelDto);
        }
        
        public TestConsole.TreeServiceReference.LocalityTypeDto CreateLocalityType(TestConsole.TreeServiceReference.LocalityTypeDto localityTypeDto) {
            return base.Channel.CreateLocalityType(localityTypeDto);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.LocalityTypeDto> CreateLocalityTypeAsync(TestConsole.TreeServiceReference.LocalityTypeDto localityTypeDto) {
            return base.Channel.CreateLocalityTypeAsync(localityTypeDto);
        }
        
        public TestConsole.TreeServiceReference.LocalityTypeDto GetLocalityType(System.Guid localityTypeId) {
            return base.Channel.GetLocalityType(localityTypeId);
        }
        
        public System.Threading.Tasks.Task<TestConsole.TreeServiceReference.LocalityTypeDto> GetLocalityTypeAsync(System.Guid localityTypeId) {
            return base.Channel.GetLocalityTypeAsync(localityTypeId);
        }
        
        public void UpdateLocalityType(TestConsole.TreeServiceReference.LocalityTypeDto localityTypeDto) {
            base.Channel.UpdateLocalityType(localityTypeDto);
        }
        
        public System.Threading.Tasks.Task UpdateLocalityTypeAsync(TestConsole.TreeServiceReference.LocalityTypeDto localityTypeDto) {
            return base.Channel.UpdateLocalityTypeAsync(localityTypeDto);
        }
    }
}
